#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R           &kp T                                                     &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A             &kp S         &kp D         &kp F           &kp G        &to 0                 &kp MINUS              &kp H        &kp J  &kp K      &kp L       &kp SEMICOLON
&kp Z             &kp X         &kp C         &kp V           &kp B        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N        &kp M  &kp COMMA  &kp PERIOD  &lt 1 SLASH
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &lt 1 SPACE  &lt 3 SPACE           &kp BACKSPACE          &lt 2 ENTER                                &lt 3 TAB
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1    &kp F2          &kp UP_ARROW  &kp F4           &kp GRAVE                                       &kp F6         &kp F7     &kp F8     &kp F9     &kp F10
&kp F5    &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp AT     &to 0             &kp INT_MUHENKAN   &kp PAGE_UP    &mkp LCLK  &mkp LCLK  &mkp RCLK  &kp F12
&kp PLUS  &kp EXCL        &kp F3        &kp DOLLAR       &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PAGE_DOWN  &mkp LCLK  &mkp LCLK  &mkp RCLK  &kp F11
&trans    &trans          &trans        &trans           &trans     &none             &to 2              &to 0                                           &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&kp TAB     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_ASTERISK                                            &kp MINUS        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DOT
&kp MINUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_PLUS      &kp N1          &kp INT_KATAKANAHIRAGANA  &kp BACKSLASH    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp APOS
&kp GRAVE   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DIVIDE    &kp LEFT_BRACE  &kp RIGHT_BRACE           &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL
&kp RSHIFT  &kp KP_DOT    &kp NUMBER_0  &kp DEL       &kp LEFT_ALT     &kp LEFT_SHIFT  &trans                    &to 0                                                               &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp TAB          &bt BT_PRV  &bt BT_NXT              &none                    &kp LS(LG(GRAVE))                         &kp LEFT_BRACKET        &kp LANG2        &kp LANG1    &kp RIGHT_BRACKET        &kp RIGHT_GUI
&kp LC(LS(ESC))  &none       &kp LS(LG(LEFT_ARROW))  &kp LS(LG(RIGHT_ARROW))  &none              &kp N1         &kp N2  &kp LC(LG(LEFT_ARROW))  &kp HOME         &kp END      &kp LC(LG(RIGHT_ARROW))  &kp ESCAPE
&kp PRINTSCREEN  &none       &kp C                   &kp V                    &kp B              &bt BT_DISC 0  &kp N4  &kp LEFT_PARENTHESIS    &kp LC(LS(TAB))  &kp LC(TAB)  &kp RIGHT_PARENTHESIS    &trans
&trans           &kp LCTRL   &trans                  &trans                   &trans             &trans         &trans  &trans                                                                         &bootloader
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
